{"version":3,"sources":["Redux/reducer.js","components/Header.js","components/Home.js","components/FormatPost.js","components/Exercises.js","components/Post.js","components/Recipes.js","components/SuprSkrtLogin.js","components/Motivation.js","components/Blog.js","components/About.js","App.js","serviceWorker.js","Redux/store.js","index.js"],"names":["initialState","isAuthenticated","user","USER_LOGGED_IN","USER_LOGGED_OUT","userLoggedIn","type","payload","Header","Navbar","variant","className","Brand","to","Nav","fill","defaultActiveKey","Item","Link","eventKey","this","props","permissions","Component","connect","state","Home","FormatPost","Card","date","substring","imageurl","Img","src","video","width","height","title","page","Body","Title","Text","message","Button","onClick","deletePost","id","Exercises","posts","componentDidMount","axios","get","then","response","setState","data","delete","postsToRender","map","post","key","Post","handleChange","e","target","name","value","submitPost","Date","toString","history","push","Form","Group","controlId","Label","Control","onChange","Image","style","alignItems","as","rows","Check","label","Recipes","catch","error","console","log","SuprSkrtLogin","email","password","errorMessage","handleKeyPress","loginUser","placeholder","onKeyPress","withRouter","Motivation","Blog","About","roundedCircle","rel","href","App","loading","exact","path","component","Boolean","window","location","hostname","match","createStore","action","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4562c2e1.chunk.js","sourcesContent":["const initialState = {\n    isAuthenticated: false,\n    user: {},\n}\n\nconst USER_LOGGED_IN = 'USER_LOGGED_IN';\nconst USER_LOGGED_OUT = 'USER_LOGGED_OUT';\n\nexport default function reducer(state = initialState, action) {\n    switch (action.type)\n    {\n        case USER_LOGGED_IN:\n            return { ...state, isAuthenticated: true, user: action.payload };\n\n        case USER_LOGGED_OUT:\n            return { ...state, isAuthenticated: false, user: {} };\n\n        default:\n            return state;\n    }\n}\n\nexport function userLoggedIn (user) {\n    return {\n        type: USER_LOGGED_IN,\n        payload: user,\n    }\n}\n\nexport function userLoggedOut () {\n    return {\n        type: USER_LOGGED_OUT,\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n// Styling component\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nclass Header extends Component {\n    render() {\n        return (\n            <Navbar variant='dark'  className=\"nav-bar\" >\n                <Navbar.Brand className=\"justify-content-start\"  >\n                    <Link to='/'>Health by KB</Link>\n                </Navbar.Brand>\n\n                <Nav fill variant='pills' defaultActiveKey=\"/\" className='nav-bar-links' >\n                    <Nav.Item>\n                        <Nav.Link eventKey='link-1' ><Link to='/exercises' >Exercises</Link></Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link eventKey=\"link-2\"><Link to='/recipes' >Healthy Recipes</Link></Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link eventKey=\"link-3\"><Link to='/motivations' >Motivation</Link></Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link eventKey=\"link-4\" ><Link to='/blogs' >Blog</Link></Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link eventKey=\"link-5\" ><Link to='/about' >About Me</Link></Nav.Link>\n                    </Nav.Item>\n                    {this.props.user.permissions === 'ADMIN' && <Nav.Item><Nav.Link eventKey=\"link-6\" ><Link to='/post' >Post</Link></Nav.Link></Nav.Item>}\n                </Nav>\n            </Navbar>\n        )\n    }\n}\n\nfunction mapStateToProps (state) {\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps, null)(Header);","import React, { Component } from 'react';\n\n\nclass Home extends Component {\n    render() {\n        return (\n            <div className=\"home-page-slogan\">\n                <h1>Health By KB</h1>\n                <p>Creating Simple Healthy Lifestyles</p>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Bootstrap components\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\nclass FormatPost extends Component {\n\n    render() \n    {\n        return (\n            <Card className='post-container'>\n                <Card.Header>{this.props.date.substring(0, 15)}</Card.Header>\n                {this.props.imageurl && <Card.Img src={this.props.imageurl} className='post-image' />}\n                {this.props.video && <iframe src={this.props.video} width='100%' height='350px;' title={`${this.props.page} video`} />}\n                <Card.Body>\n                    <Card.Title>{this.props.title}</Card.Title>\n                    <Card.Text className='post-textarea'>{this.props.message}</Card.Text>\n                </Card.Body>\n                {this.props.user.permissions === 'ADMIN' && <Button variant='light' onClick={() => this.props.deletePost(this.props.id, this.props.page)}>Delete</Button>}\n            </Card>\n        )\n    }\n}\n\nfunction mapStateToProps (state) {\n    return {\n        user: state.user\n    }\n\n}\n\nexport default connect(mapStateToProps, null)(FormatPost);","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport FormatPost from './FormatPost';\n\nclass Exercises extends Component {\n\n    state = {\n        posts: [],\n    }\n\n    componentDidMount = () => {\n        axios.get('/post/exercises').then(response => {\n            this.setState({\n                posts: response.data\n            })\n        })\n    }\n\n    deletePost = (id, page) => {\n        axios.delete(`/post/${id}/${page}`).then( response => {\n            this.setState({\n                posts: response.data,\n            })\n        })\n    }\n\n    render() {\n        let postsToRender = this.state.posts.map( post => {\n            return (\n                    <div key={'post' + post.id}>\n                        <FormatPost \n                            id={post.id}\n                            date={post.date}\n                            imageurl={post.imageurl}\n                            video={post.video}\n                            message={post.message}\n                            page={post.page}\n                            title={post.title}\n                            deletePost={this.deletePost}  />\n                    </div>)\n        });\n\n        return (\n            <div>\n                {postsToRender}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps (state) {\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps, null)(Exercises);","import React, { Component } from 'react';\nimport axios from 'axios';\n\n// Bootstrap components\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport Form from 'react-bootstrap/Form';\n\nclass Post extends Component {\n\n    state = {\n        message: '',\n        date: '',\n        imageurl: '',\n        video: '',\n        page: '',\n        title: '',\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    submitPost = () => {\n        if (this.state.page === '')\n        {\n            this.setState({\n                page: 'exercise',\n            })\n        }\n\n        this.setState({\n            date: new Date().toString()\n        }, () => {\n            let { date, imageurl, video, message, page, title } = this.state\n            \n            axios.post('/post/create', {date, imageurl, video, message, page, title}).then( response => {\n                this.props.history.push(`/${this.state.page}s`);\n            })\n        })\n    }\n\n    render() {\n        return (\n            <Form className='form'>\n                <Form.Group controlId=\"formImageUrl\">\n                    <Form.Label>Image URL</Form.Label>\n                    <Form.Control name=\"imageurl\" value={this.state.imageurl} onChange={this.handleChange} />\n                    {this.state.imageurl && <Image src={this.state.imageurl} className='preview-image' width='25%' height='25%' style={{ alignItems: 'center'}} />}\n                </Form.Group>\n\n                <Form.Group controlId=\"formVideoUrl\">\n                    <Form.Label>Video URL</Form.Label>\n                    <Form.Control name='video' value={this.state.video} onChange={this.handleChange} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formTitle\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control name='title' value={this.state.title} onChange={this.handleChange} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formContent\">\n                    <Form.Label>Post Content</Form.Label>\n                    <Form.Control className='post-textarea' as='textarea' rows='4' name='message' value={this.state.message} onChange={this.handleChange} />\n                </Form.Group>\n\n                <Form.Check type='radio' name='page' value='exercise' onChange={this.handleChange} label=\"Exercise\"></Form.Check> \n                <Form.Check type='radio' name='page' value='recipe' onChange={this.handleChange} label=\"Recipe\"></Form.Check> \n                <Form.Check type='radio' name='page' value='blog' onChange={this.handleChange} label=\"Blog\"></Form.Check> \n                <Form.Check type='radio' name='page' value='motivation' onChange={this.handleChange} label=\"Motivation\"></Form.Check> \n\n                <Form.Group controlId='formButtons' className='form-buttons' >\n                    <Button variant='dark' onClick={this.submitPost} >Submit Post</Button>\n                </Form.Group>\n            </Form>\n        )\n    }\n}\n\nexport default Post;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport FormatPost from './FormatPost';\n\nclass Recipes extends Component {\n\n    state = {\n        posts: [],\n    }\n\n    componentDidMount = () => {\n        axios.get('/post/recipes').then( response => {\n            this.setState({\n                posts: response.data\n            })\n        }).catch(error => {\n            console.log(error);\n        })\n    }\n\n    deletePost = (id, page) => {\n        axios.delete(`/post/${id}/${page}`).then( response => {\n            this.setState({\n                posts: response.data,\n            })\n        })\n    }\n\n    render() {\n        let postsToRender = this.state.posts.map( post => {\n            return (\n                    <div key={'post' + post.id}>\n                        <FormatPost \n                            id={post.id}\n                            date={post.date}\n                            imageurl={post.imageurl}\n                            video={post.video}\n                            message={post.message}\n                            page={post.page}\n                            title={post.title}\n                            deletePost={this.deletePost} />\n                    </div>\n            )\n        })\n\n        return (\n            <div >\n                {postsToRender}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps (state)\n{\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps, null)(Recipes);\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { userLoggedIn } from '../Redux/reducer';\nimport { withRouter } from 'react-router-dom';\n\n// Bootstrap Components\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass SuprSkrtLogin extends Component {\n\n    state = {\n        email: '',\n        password: '',\n        errorMessage: '',\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target;\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    handleKeyPress = e => {\n        if (e.key == 'Enter') {\n            this.loginUser();\n        }\n    }\n\n    loginUser = () => {\n        // console.log(this.state)\n        axios.post('/auth/login', this.state).then(response => {\n            this.props.userLoggedIn(response.data);\n            this.props.history.push('/');\n        }).catch( error => {\n            console.log(error);\n            this.setState({\n                errorMessage: error.response.data\n            })\n        })\n    }\n\n    render() {\n        return (\n            <Form className='form'>\n                <Form.Group controlId='formBasicEmail'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={this.handleChange} value={this.state.email} name='email' />\n                </Form.Group>\n\n                <Form.Group controlId='formBasicPassword'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"password\" onKeyPress={this.handleKeyPress} onChange={this.handleChange} value={this.state.password} name='password' />\n                </Form.Group>\n\n                <Button variant=\"dark\" onClick={this.loginUser} handleKeyPress={this.handleKeyPress}>Login</Button>\n            </Form>\n        )\n    }\n}\n\nfunction mapStateToProps (state) {\n    return {\n        user: state.user\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, { userLoggedIn })(SuprSkrtLogin));","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport FormatPost from './FormatPost';\n\nclass Motivation extends Component {\n\n    state = {\n        posts: [],\n    }\n\n    componentDidMount = () => {\n        axios.get('/post/motivation').then(response => {\n            this.setState({\n                posts: response.data\n            })\n        })\n    }\n\n    deletePost = (id, page) => {\n        axios.delete(`/post/${id}/${page}`).then( response => {\n            this.setState({\n                posts: response.data,\n            })\n        })\n    }\n\n    render() {\n        let postsToRender = this.state.posts.map( post => {\n            return (\n                    <div key={'post' + post.id}>\n                        <FormatPost \n                            id={post.id}\n                            date={post.date}\n                            imageurl={post.imageurl}\n                            video={post.video}\n                            message={post.message}\n                            page={post.page}\n                            title={post.title}\n                            deletePost={this.deletePost}  />\n                    </div>)\n        });\n\n        return (\n            <div>\n                {postsToRender}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps (state) {\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps, null)(Motivation);","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport FormatPost from './FormatPost';\n\nclass Blog extends Component {\n\n    state = {\n        posts: [],\n    }\n\n    componentDidMount = () => {\n        axios.get('/post/blog').then(response => {\n            this.setState({\n                posts: response.data\n            })\n        })\n    }\n\n    deletePost = (id, page) => {\n        axios.delete(`/post/${id}/${page}`).then( response => {\n            this.setState({\n                posts: response.data,\n            })\n        })\n    }\n\n    render() {\n        let postsToRender = this.state.posts.map( post => {\n            return (\n                    <div key={'post' + post.id}>\n                        <FormatPost \n                            id={post.id}\n                            date={post.date}\n                            imageurl={post.imageurl}\n                            video={post.video}\n                            message={post.message}\n                            page={post.page}\n                            title={post.title}\n                            deletePost={this.deletePost}  />\n                    </div>)\n        });\n\n        return (\n            <div>\n                {postsToRender}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps (state) {\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps, null)(Blog);","import React, { Component } from 'react';\n\n// Bootstrap Components\nimport Image from 'react-bootstrap/Image';\n\nexport default class About extends Component {\n    render() {\n        let image = 'https://scontent-den4-1.xx.fbcdn.net/v/t1.0-9/39972116_10214188789008432_3849217499618869248_n.jpg?_nc_cat=102&_nc_ohc=3cTsygL6oT8AQm2fXP1hQNBAl2K5NuzpLcd6CGlvF1uvCI1kQhW6XlBnA&_nc_ht=scontent-den4-1.xx&oh=25439580338b391e4a90b9f2e78a5038&oe=5E86BA01'\n        return (\n            <div className='about-me' >\n                <Image src={`${image}`} roundedCircle width='250px' height='250px' />\n                <p className='about-me-content'>\n                Hi I’m Kristi and I have a passion for health and helping people. I enjoy exercising, hanging out with friends, \n                and crafting. Summer is my favorite season and I wish it could be 80 degrees year round☀️ <br></br><br></br>\n                I am a Certified Health Education Specialist (CHES). I love helping people get healthy and finding their true selves.\n                </p>\n                <div className='social-links'>\n                    <a className=\"facebook\" rel=\"noopener noreferrer\" href='https://www.facebook.com/kristi.behrens.5/timeline?lst=1240671343%3A1075452843%3A1575325003' target='_blank' />\n                    <a className='instagram' rel=\"noopener noreferrer\" href='https://instagram.com/healthbykb?igshid=38wbvuzjinue' target='_blank' />\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { userLoggedIn } from './Redux/reducer';\n\n\n// Components\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Exercises from './components/Exercises';\nimport Post from './components/Post';\nimport Recipes from './components/Recipes';\nimport SuprSkrtLogin from './components/SuprSkrtLogin';\nimport Motivation from './components/Motivation';\nimport Blog from './components/Blog';\nimport About from './components/About';\n\nclass App extends Component {\n\n  state = {\n    loading: true,\n  }\n\n  componentDidMount() {\n    axios.get('/auth/currentuser').then( response => {\n      if (response.data) {\n        this.props.userLoggedIn(response.data)\n      }\n    })\n\n    this.setState({\n      loading: false\n    })\n  }\n  \n  render() {\n    // console.log(this.props)\n    return (\n      <div className=\"body-container\">\n      {this.state.loading ?\n      <div></div>\n      : \n        <HashRouter>\n          <Header />\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route path='/secret' component={SuprSkrtLogin} />\n            <Route path='/exercises' component={Exercises} />\n            <Route path='/recipes' component={Recipes} />\n            <Route path='/post' component={Post} />\n            <Route path='/blogs' component={Blog} />\n            <Route path='/motivations' component={Motivation} />\n            <Route path='/about' component={About} />\n          </Switch>\n        </HashRouter>} \n      </div>\n    )\n  }\n}\n\nexport default connect(null, { userLoggedIn })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore } from 'redux';\nimport reducer from './reducer';\n\nexport default createStore(reducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './Redux/store';\n\nReactDOM.render(\n    <Provider store={ store }>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}